/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sa;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import static java.lang.String.valueOf;

/**
 *
 * @author benel
 */
public class TourGui extends javax.swing.JFrame
{

    public boolean drawBest = false;

    /**
     * Creates new form CelciusConverterGUI
     */
    public TourGui()
    {
        initComponents();
        SeedTextField.setColumns(10);
        StartTempField.setColumns(10);
        CoolingRateField.setColumns(10);
        CityField.setColumns(10);
        SeedTextField.setText(valueOf(SimulatedAnnealing.curr.seed));
        StartTempField.setText(valueOf(SimulatedAnnealing.curr.startTemp));
        CoolingRateField.setText(valueOf(SimulatedAnnealing.curr.coolingRate));
        CityField.setText(valueOf(SimulatedAnnealing.curr.cityCount));

        CurrSeed.setText(valueOf(SimulatedAnnealing.seed));
        CurrStartTemp.setText(valueOf(SimulatedAnnealing.startTemp));
        CurrCoolingRate.setText(valueOf(SimulatedAnnealing.coolingRate));
        CurrCityCount.setText(valueOf(SimulatedAnnealing.cityCount));

        NewSeed.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent ae)
            {
                String textFieldValue = SeedTextField.getText();
                SimulatedAnnealing.seed = Long.parseLong(textFieldValue);
                CurrSeed.setText(valueOf(SimulatedAnnealing.seed));
            }
        });
        StartTempButton.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent ae)
            {
                String textFieldValue = StartTempField.getText();
                SimulatedAnnealing.startTemp = Double.parseDouble(textFieldValue);
                CurrStartTemp.setText(valueOf(SimulatedAnnealing.startTemp));
            }
        });
        CoolingButton.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent ae)
            {
                String textFieldValue = CoolingRateField.getText();
                SimulatedAnnealing.coolingRate = Double.parseDouble(textFieldValue);
                CurrCoolingRate.setText(valueOf(SimulatedAnnealing.coolingRate));
            }
        });
        CityButton.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent ae)
            {
                String textFieldValue = CityField.getText();
                SimulatedAnnealing.cityCount = Integer.parseInt(textFieldValue);
                CurrCoolingRate.setText(valueOf(SimulatedAnnealing.coolingRate));
                CurrCityCount.setText(valueOf(SimulatedAnnealing.cityCount));
            }
        });
        ResetButton.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent ae)
            {
                SimulatedAnnealing.newCityPlanner(SimulatedAnnealing.startTemp, SimulatedAnnealing.coolingRate, SimulatedAnnealing.cityCount, SimulatedAnnealing.seed);
            }
        });
        RestartButton.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent ae)
            {
                SimulatedAnnealing.newCityPlanner(SimulatedAnnealing.startTemp, SimulatedAnnealing.coolingRate, SimulatedAnnealing.cityCount, SimulatedAnnealing.seed);
            }
        });
        DrawMode.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent ae)
            {
                if (DrawMode.getModel().isSelected())
                {
                    drawBest = true;
                    DrawMode.setText("Draw Current Path");
                } else
                {
                    drawBest = false;
                    DrawMode.setText("Draw Best Path");
                }
            }
        });
        Pause.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent ae)
            {
                if (Pause.getModel().isSelected())
                {
                    SimulatedAnnealing.curr.pause(true);
                    Pause.setText("Resume");
                } else
                {
                    SimulatedAnnealing.curr.pause(false);
                    Pause.setText("Pause");
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane = new javax.swing.JTabbedPane();
        TourPanel = new javax.swing.JPanel();
        draw = new sa.Draw();
        RestartButton = new javax.swing.JButton();
        DrawMode = new javax.swing.JToggleButton();
        Pause = new javax.swing.JToggleButton();
        SettingsPanel = new javax.swing.JPanel();
        SeedLabel = new javax.swing.JLabel();
        SeedTextField = new javax.swing.JTextField();
        NewSeed = new javax.swing.JButton();
        StartTempLabel = new javax.swing.JLabel();
        CoolingLabel = new javax.swing.JLabel();
        CityLabel = new javax.swing.JLabel();
        StartTempField = new javax.swing.JTextField();
        StartTempButton = new javax.swing.JButton();
        CoolingRateField = new javax.swing.JTextField();
        CityField = new javax.swing.JTextField();
        CoolingButton = new javax.swing.JButton();
        CityButton = new javax.swing.JButton();
        ResetButton = new javax.swing.JButton();
        Header = new javax.swing.JLabel();
        CurrSeed = new javax.swing.JLabel();
        CurrStartTemp = new javax.swing.JLabel();
        CurrCoolingRate = new javax.swing.JLabel();
        CurrCityCount = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TourPanel.setLayout(new java.awt.BorderLayout());

        RestartButton.setText("Restart");
        RestartButton.setToolTipText("");

        DrawMode.setText("Show Best Path");

        Pause.setText("Pause");

        javax.swing.GroupLayout drawLayout = new javax.swing.GroupLayout(draw);
        draw.setLayout(drawLayout);
        drawLayout.setHorizontalGroup(
            drawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, drawLayout.createSequentialGroup()
                .addContainerGap(489, Short.MAX_VALUE)
                .addComponent(Pause, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RestartButton, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DrawMode, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        drawLayout.setVerticalGroup(
            drawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, drawLayout.createSequentialGroup()
                .addContainerGap(358, Short.MAX_VALUE)
                .addGroup(drawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(RestartButton, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                    .addComponent(DrawMode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Pause, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        TourPanel.add(draw, java.awt.BorderLayout.CENTER);

        jTabbedPane.addTab("Tour", TourPanel);

        SeedLabel.setText("Seed :");

        SeedTextField.setText("hold");
        SeedTextField.setToolTipText("");

        NewSeed.setText("New Seed");

        StartTempLabel.setText("Start Temp :");

        CoolingLabel.setText("Cooling Rate :");

        CityLabel.setText("Number of Ciries :");

        StartTempField.setText("jTextField1");

        StartTempButton.setText("Set Start Temp");
        StartTempButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartTempButtonActionPerformed(evt);
            }
        });

        CoolingRateField.setText("jTextField2");

        CityField.setText("jTextField3");

        CoolingButton.setText("Set Cooling Rate");

        CityButton.setText("Set City Count");

        ResetButton.setText("Reset");

        Header.setText("Current Values:");

        CurrSeed.setText("jLabel1");

        CurrStartTemp.setText("jLabel2");

        CurrCoolingRate.setText("jLabel3");

        CurrCityCount.setText("jLabel4");

        javax.swing.GroupLayout SettingsPanelLayout = new javax.swing.GroupLayout(SettingsPanel);
        SettingsPanel.setLayout(SettingsPanelLayout);
        SettingsPanelLayout.setHorizontalGroup(
            SettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SettingsPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(ResetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(SettingsPanelLayout.createSequentialGroup()
                .addGroup(SettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SettingsPanelLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(SettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(StartTempLabel)
                            .addComponent(CoolingLabel)
                            .addComponent(SeedLabel)
                            .addComponent(CityLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(SettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(SettingsPanelLayout.createSequentialGroup()
                                .addGroup(SettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(StartTempField)
                                    .addComponent(CoolingRateField)
                                    .addComponent(SeedTextField))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(SettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(SettingsPanelLayout.createSequentialGroup()
                                        .addComponent(CoolingButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(CurrCoolingRate))
                                    .addGroup(SettingsPanelLayout.createSequentialGroup()
                                        .addComponent(StartTempButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(CurrStartTemp))
                                    .addGroup(SettingsPanelLayout.createSequentialGroup()
                                        .addComponent(NewSeed)
                                        .addGap(89, 89, 89)
                                        .addComponent(CurrSeed))))
                            .addGroup(SettingsPanelLayout.createSequentialGroup()
                                .addComponent(CityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CityButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(CurrCityCount))))
                    .addGroup(SettingsPanelLayout.createSequentialGroup()
                        .addGap(335, 335, 335)
                        .addComponent(Header)))
                .addContainerGap(524, Short.MAX_VALUE))
        );
        SettingsPanelLayout.setVerticalGroup(
            SettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SettingsPanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(Header)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NewSeed)
                    .addComponent(SeedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SeedLabel)
                    .addComponent(CurrSeed))
                .addGap(7, 7, 7)
                .addGroup(SettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StartTempLabel)
                    .addComponent(StartTempField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StartTempButton)
                    .addComponent(CurrStartTemp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CoolingButton)
                    .addComponent(CoolingRateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CoolingLabel)
                    .addComponent(CurrCoolingRate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CityLabel)
                    .addComponent(CityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CityButton)
                    .addComponent(CurrCityCount))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 249, Short.MAX_VALUE)
                .addComponent(ResetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane.addTab("Settings", SettingsPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void StartTempButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartTempButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StartTempButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(TourGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(TourGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(TourGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(TourGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new TourGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CityButton;
    private javax.swing.JTextField CityField;
    private javax.swing.JLabel CityLabel;
    private javax.swing.JButton CoolingButton;
    private javax.swing.JLabel CoolingLabel;
    private javax.swing.JTextField CoolingRateField;
    private javax.swing.JLabel CurrCityCount;
    private javax.swing.JLabel CurrCoolingRate;
    private javax.swing.JLabel CurrSeed;
    private javax.swing.JLabel CurrStartTemp;
    private javax.swing.JToggleButton DrawMode;
    private javax.swing.JLabel Header;
    private javax.swing.JButton NewSeed;
    private javax.swing.JToggleButton Pause;
    private javax.swing.JButton ResetButton;
    private javax.swing.JButton RestartButton;
    private javax.swing.JLabel SeedLabel;
    private javax.swing.JTextField SeedTextField;
    private javax.swing.JPanel SettingsPanel;
    private javax.swing.JButton StartTempButton;
    private javax.swing.JTextField StartTempField;
    private javax.swing.JLabel StartTempLabel;
    private javax.swing.JPanel TourPanel;
    public sa.Draw draw;
    private javax.swing.JTabbedPane jTabbedPane;
    // End of variables declaration//GEN-END:variables
}
